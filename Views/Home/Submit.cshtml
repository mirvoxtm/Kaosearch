@model Kaomoji;

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <form asp-action="Search" method="get">
        <div class="input-group pt-4">
            <input type="text" name="query" class="form-control" placeholder="🔎 | Search a Kaomoji or Tag...">
        </div>
    </form>

    <h1 class="display-6 pt-5" style="font-size: 30px;">Submit a Kaomoji</h1>
    <h3 class="display-1" style="font-size: 20px;">Couldn't find a cool reaction? No worries! You can add it!</h3>
</div>

<style>
    .tag {
        width: 100px;
        text-align: center;
        background-color: #f1f1f1;
        padding: 5px 10px;
        border-radius: 30px;
        border-width: 1px;
        border-style: solid;
        border-color: grey;
        margin: 6px;
    }

    .tag:hover {
        background-color: grey;
        border-color: grey;
        color: white;
        cursor: pointer;
    }

    #tagContainer {
        display: flex;
        flex-wrap: wrap;
    }
</style>

<form asp-action="Submit" method="post" class="bg-custom rounded col-12 py-3 px-4">

    @Html.AntiForgeryToken()

      <div class="mb-3 row">
            <label asp-for="Kao" class="pb-2" style="font-size: 20px">Kaomoji:</label>
            <div class="col-sm-10">
            <input asp-for="Kao" type="text" class="form-control text-dark border-dark p-3" style="border-radius: 30px;" placeholder="Ex: (╯✧▽✧)╯" name="Kao">
            <span asp-validation-for="Kao" class="text-danger"></span>
            </div>
      </div>

    <div class="mb-3 row">
        <label asp-for="Tags" class="pb-2" style="font-size: 20px">Tags</label>
        <div class="col-sm-10">
            <input type="text" class="form-control text-dark border-dark p-3" style="border-radius: 30px;" placeholder="Ex: smile, goofy, silly..." name="InputTags">
            <div id="tagContainer" class="m-3 row"></div>
            <input type="hidden" asp-for="Tags" id="hiddenTags" name="Tags">
            <span asp-validation-for="Tags" class="text-danger"></span>
        </div>
    </div>

            <div class="mb-3 row">
                <label asp-for="Emojis" class="pb-2" style="font-size: 20px">Emojis</label>
                <div class="col-sm-8">
            <input type="text" asp-for="Emojis" name="Emojis" id="Emojis" class="form-control text-dark border-dark p-3" style="border-radius: 30px;" placeholder="Ex: 😀, 🧐, 😱" name="Emojis">
            <span asp-validation-for="Emojis" class="text-danger"></span>
                </div>

                <div class="col-sm-1">
                    <button id="emoji-sel-button" class="btn btn-outline-secondary btn-pill d-inline-flex p-3" style="border-radius: 30px; padding: 7px; border-color: black; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">😋 Pick an Emoji</button>

                    <div id="EmojiPic">
                        <Picker onEmojiClick={onEmojiClick} />
                    </div>
                </div>
            </div>

        <hr class="m-5" />

        <div class="d-flex justify-content-end">
            <a href="/" type="button" class="mx-3 btn btn-outline-secondary btn-pill d-inline-flex" style="border-radius: 30px; padding: 7px; border-color: black; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">Return to Main Page</a>
            <button type="submit" value="" class="btn btn-outline-secondary btn-pill d-inline-flex" style="border-radius: 30px; padding: 7px; border-color: black; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">Submit!</button>
        </div>
</form>



<script>
    document.querySelector('input[name="InputTags"]').addEventListener('keyup', function (e) {
        if (e.key === ' ' || e.key === 'Enter') {
            e.preventDefault();
            addTag(this.value);
            this.value = '';
        }
    });

    function addTag(text) {
        var tag = document.createElement('div');
        tag.className = 'tag';
        tag.textContent = text;
        document.querySelector('#tagContainer').appendChild(tag);

        // Add the tag to the hidden input field
        var hiddenTags = document.querySelector('#hiddenTags');
        if (hiddenTags.value) {
            hiddenTags.value += ',';
        }
        hiddenTags.value += text.trim();
    }


</script>


<script>
    document.addEventListener('DOMContentLoaded', (event) => {

        document.querySelector('#hiddenTags').value = '';

        const inputField = document.querySelector('input[name="Emojis"]');

        const pickerOptions = {
            onEmojiSelect: (emojiObject) => {
                inputField.value += emojiObject.native + ' ';
            }
        };

        const picker = new EmojiMart.Picker(pickerOptions)

        const button = document.querySelector('#emoji-sel-button');

        button.addEventListener('click', (event) => {
            event.preventDefault();
            document.body.appendChild(picker);
        });
    });
</script>
